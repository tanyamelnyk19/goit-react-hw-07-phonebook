{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","redux/contacts/operations.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","redux/contacts/actions.js","components/Filter/Filter.js","components/Contact/Contact.js","components/MyLoader/MyLoader.js","components/ContactList/ContactList.js","components/App/App.js","redux/contacts/reducers.js","redux/store.js","index.js"],"names":["module","exports","axios","defaults","baseURL","fetchContacts","createAsyncThunk","_","a","rejectWithValue","get","data","addContact","contact","post","deleteContact","contactId","delete","id","getContacts","state","contacts","getFilter","filter","getIisLoadingContacts","loading","getFilteredName","createSelector","normalizedFilter","toLowerCase","name","includes","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","resetForm","className","s","form","onSubmit","e","preventDefault","newContact","some","alert","label","input","type","value","pattern","title","required","onChange","target","button","createAction","Filter","actions","Contact","MyLoader","color","height","width","ContactList","useEffect","isLoadingContacts","filteredName","map","onClick","App","contactsList","createReducer","contactsData","fulfilled","payload","contactsFilter","pending","rejected","combineReducers","store","configureStore","reducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4b33655.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__V8N2j\",\"input\":\"Filter_input__p5iRb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactList_contact__35deT\",\"button\":\"ContactList_button__1XyeR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__2v8ut\",\"input\":\"ContactForm_input__3V2oj\",\"button\":\"ContactForm_button__n8lMf\"};","import axios from \"axios\";\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://619d4882131c600017088e81.mockapi.io';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async (_, { rejectWithValue }) => {\r\n      try {\r\n        const { data } = await axios.get('/contacts/');\r\n        return data;\r\n      } catch (error) {\r\n        return rejectWithValue(error);\r\n      }  \r\n  }\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n    'contacts/addContact',\r\n    async (contact, { rejectWithValue }) => {\r\n        try {\r\n          const { data } = await axios.post('/contacts/', contact);\r\n          return data;\r\n        } catch (error) {\r\n          return rejectWithValue(error);\r\n        }  \r\n    }\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n    'contacts/deleteContact',\r\n    async (contactId, { rejectWithValue }) => {\r\n        try {\r\n          const { data: { id } } = await axios.delete(`/contacts/${contactId}`);\r\n          return id;\r\n        } catch (error) {\r\n          return rejectWithValue(error);\r\n        }  \r\n    }\r\n);\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContacts = state => state.contacts;\r\nexport const getFilter = state => state.filter\r\n\r\nexport const getIisLoadingContacts = state => state.loading;\r\n\r\nexport const getFilteredName = createSelector(\r\n    [getContacts,getFilter],\r\n    (contacts, filter) => {\r\n        const normalizedFilter = filter.toLowerCase();\r\n        const filteredName = contacts.filter(contact =>\r\n        contact.name.toLowerCase().includes(normalizedFilter));\r\n        return filteredName;\r\n    }\r\n);\r\n","import { useState } from 'react';\nimport s from './ContactForm.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { getContacts } from 'redux/contacts/selectors';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  \n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleNameChange = e => {\n    setName(e.target.value);\n  };\n\n  const handleNumberChange = e => {\n    setNumber(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newContact = {\n      name,\n      number,\n    };\n\n    const contactInPhonebook = contacts.some(\n        contact => contact.name.toLowerCase() === newContact.name.toLowerCase(),\n    );\n    \n    if (contactInPhonebook) {\n      alert(`${newContact.name} is already in contacts.`);\n    } else {\n      dispatch(addContact(newContact));\n    }\n\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleNameChange}\n        />\n      </label>\n\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleNumberChange}\n        />\n      </label>\n\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const filter = createAction(\"contact/filter\");\r\n","import s from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as actions from 'redux/contacts/actions';\nimport { getFilter } from 'redux/contacts/selectors';\n\nexport default function Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();  \n\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        onChange={(e) => dispatch(actions.filter(e.target.value))}\n      />\n    </label>\n  );\n}\n","import PropTypes from 'prop-types';\n\nexport default function Contact({ name, number }) {\n  return (\n    <span>\n      {name}: {number}\n    </span>\n  );\n}\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport './MyLoader.css';\n\nexport default function MyLoader() {\n  return (\n    <div className=\"myLoader\">\n      <Loader type=\"ThreeDots\" color=\"rgba(105, 132, 253, 0.897)\" height={80} width={80} />\n    </div>\n  );\n}\n","import Contact from '../Contact';\nimport s from './ContactList.module.css';\nimport MyLoader from '../MyLoader/MyLoader';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts, deleteContact } from 'redux/contacts/operations';\nimport { useEffect } from 'react';\nimport { getIisLoadingContacts, getFilteredName } from 'redux/contacts/selectors';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const isLoadingContacts = useSelector(getIisLoadingContacts);\n\n  const filteredName = useSelector(getFilteredName);\n\n  return (\n    <>\n      {isLoadingContacts ? (<MyLoader />)\n      : (\n        <ul>\n        {filteredName.map(({ id, name, number }) => (\n          <li className={s.contact} key={id}>\n            <Contact name={name} number={number} />\n            <button className={s.button} onClick={() => dispatch(deleteContact(id))}>\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n      )}      \n    </>\n  );\n};\n","import ContactForm from '../ContactForm';\nimport Filter from '../Filter';\nimport ContactList from '../ContactList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;","import { combineReducers } from 'redux';\r\nimport contactsData from 'contactsData/contacts.json';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { filter } from './actions';\r\nimport { fetchContacts, addContact, deleteContact } from './operations';\r\n\r\nconst contactsList = createReducer(contactsData, {\r\n    [fetchContacts.fulfilled]: (_, { payload }) => payload,\r\n    [addContact.fulfilled]: (state, { payload }) => [...state, payload],\r\n    [deleteContact.fulfilled]: (state, { payload }) => state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst contactsFilter = createReducer('', {\r\n    [filter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n    [fetchContacts.pending]: () => true,\r\n    [fetchContacts.fulfilled]: () => false,\r\n    [fetchContacts.rejected]: () => false,\r\n    [addContact.pending]: () => true,\r\n    [addContact.fulfilled]: () => false,\r\n    [addContact.rejected]: () => false,\r\n    [deleteContact.pending]: () => true,\r\n    [deleteContact.fulfilled]: () => false,\r\n    [deleteContact.rejected]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n    contacts: contactsList,\r\n    filter: contactsFilter,\r\n    loading,\r\n})\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from './contacts/reducers';\r\nimport logger from 'redux-logger';\r\nimport { \r\n    // persistStore, \r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER, \r\n} from 'redux-persist';\r\n\r\nconst store = configureStore({\r\n    reducer: contactsReducer,\r\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n        }\r\n    }).concat(logger),\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n// const persistor = persistStore(store);\r\n\r\n// const mainStore = { store, persistor };\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={mainStore.persistor}> */}\n        <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}